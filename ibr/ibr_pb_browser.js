'use strict'; // code generated by pbf v3.2.1

// ImageData ========================================

var ImageData = self.ImageData = {};

ImageData.read = function (pbf, end) {
    return pbf.readFields(ImageData._readField, {length: 0, width: 0, image: null}, end);
};
ImageData._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.length = pbf.readFloat();
    else if (tag === 2) obj.width = pbf.readFloat();
    else if (tag === 3) obj.image = pbf.readBytes();
};
ImageData.write = function (obj, pbf) {
    if (obj.length) pbf.writeFloatField(1, obj.length);
    if (obj.width) pbf.writeFloatField(2, obj.width);
    if (obj.image) pbf.writeBytesField(3, obj.image);
};

// InternalBuildingRepresentation ========================================

var InternalBuildingRepresentation = self.InternalBuildingRepresentation = {};

InternalBuildingRepresentation.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation._readField, {guid: "", name: "", structural_type: 0, metadata: null, coordinates_lookup: null, visualization: []}, end);
};
InternalBuildingRepresentation._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.guid = pbf.readString();
    else if (tag === 2) obj.name = pbf.readString();
    else if (tag === 3) obj.structural_type = pbf.readVarint();
    else if (tag === 4) obj.metadata = InternalBuildingRepresentation.BuildingMetadata.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 5) obj.coordinates_lookup = InternalBuildingRepresentation.CoordinatesLookup.read(pbf, pbf.readVarint() + pbf.pos);
    else if (tag === 6) obj.visualization.push(InternalBuildingRepresentation.Visualization.read(pbf, pbf.readVarint() + pbf.pos));
};
InternalBuildingRepresentation.write = function (obj, pbf) {
    if (obj.guid) pbf.writeStringField(1, obj.guid);
    if (obj.name) pbf.writeStringField(2, obj.name);
    if (obj.structural_type) pbf.writeVarintField(3, obj.structural_type);
    if (obj.metadata) pbf.writeMessage(4, InternalBuildingRepresentation.BuildingMetadata.write, obj.metadata);
    if (obj.coordinates_lookup) pbf.writeMessage(5, InternalBuildingRepresentation.CoordinatesLookup.write, obj.coordinates_lookup);
    if (obj.visualization) for (var i = 0; i < obj.visualization.length; i++) pbf.writeMessage(6, InternalBuildingRepresentation.Visualization.write, obj.visualization[i]);
};

InternalBuildingRepresentation.StructuralType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "BUILDING": {
        "value": 1,
        "options": {}
    }
};

// InternalBuildingRepresentation.BuildingMetadata ========================================

InternalBuildingRepresentation.BuildingMetadata = {};

InternalBuildingRepresentation.BuildingMetadata.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation.BuildingMetadata._readField, {code: "", address: "", city: "", state: "", country: ""}, end);
};
InternalBuildingRepresentation.BuildingMetadata._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.code = pbf.readString();
    else if (tag === 2) obj.address = pbf.readString();
    else if (tag === 3) obj.city = pbf.readString();
    else if (tag === 4) obj.state = pbf.readString();
    else if (tag === 5) obj.country = pbf.readString();
};
InternalBuildingRepresentation.BuildingMetadata.write = function (obj, pbf) {
    if (obj.code) pbf.writeStringField(1, obj.code);
    if (obj.address) pbf.writeStringField(2, obj.address);
    if (obj.city) pbf.writeStringField(3, obj.city);
    if (obj.state) pbf.writeStringField(4, obj.state);
    if (obj.country) pbf.writeStringField(5, obj.country);
};

// InternalBuildingRepresentation.BlockingGrid ========================================

InternalBuildingRepresentation.BlockingGrid = {};

InternalBuildingRepresentation.BlockingGrid.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation.BlockingGrid._readField, {id: "", layer_id: "", image_data: null}, end);
};
InternalBuildingRepresentation.BlockingGrid._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.layer_id = pbf.readString();
    else if (tag === 3) obj.image_data = ImageData.read(pbf, pbf.readVarint() + pbf.pos);
};
InternalBuildingRepresentation.BlockingGrid.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.layer_id) pbf.writeStringField(2, obj.layer_id);
    if (obj.image_data) pbf.writeMessage(3, ImageData.write, obj.image_data);
};

// InternalBuildingRepresentation.Visualization ========================================

InternalBuildingRepresentation.Visualization = {};

InternalBuildingRepresentation.Visualization.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation.Visualization._readField, {id: "", encoding_type: 0, image_data: null, data: null, coordinates: null}, end);
};
InternalBuildingRepresentation.Visualization._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.id = pbf.readString();
    else if (tag === 2) obj.encoding_type = pbf.readVarint();
    else if (tag === 3) obj.image_data = ImageData.read(pbf, pbf.readVarint() + pbf.pos), obj.data = "image_data";
    else if (tag === 4) obj.coordinates = InternalBuildingRepresentation.VectorCoordinates.read(pbf, pbf.readVarint() + pbf.pos), obj.data = "coordinates";
};
InternalBuildingRepresentation.Visualization.write = function (obj, pbf) {
    if (obj.id) pbf.writeStringField(1, obj.id);
    if (obj.encoding_type) pbf.writeVarintField(2, obj.encoding_type);
    if (obj.image_data) pbf.writeMessage(3, ImageData.write, obj.image_data);
    if (obj.coordinates) pbf.writeMessage(4, InternalBuildingRepresentation.VectorCoordinates.write, obj.coordinates);
};

InternalBuildingRepresentation.Visualization.EncodingType = {
    "UNKNOWN": {
        "value": 0,
        "options": {}
    },
    "VECTOR_2D": {
        "value": 1,
        "options": {}
    },
    "VECTOR_3D": {
        "value": 2,
        "options": {}
    },
    "BITMAP_IMAGE": {
        "value": 3,
        "options": {}
    }
};

// InternalBuildingRepresentation.CoordinatesLookup ========================================

InternalBuildingRepresentation.CoordinatesLookup = {};

InternalBuildingRepresentation.CoordinatesLookup.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation.CoordinatesLookup._readField, {encoded_data: null, debug_string: ""}, end);
};
InternalBuildingRepresentation.CoordinatesLookup._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.encoded_data = pbf.readBytes();
    else if (tag === 2) obj.debug_string = pbf.readString();
};
InternalBuildingRepresentation.CoordinatesLookup.write = function (obj, pbf) {
    if (obj.encoded_data) pbf.writeBytesField(1, obj.encoded_data);
    if (obj.debug_string) pbf.writeStringField(2, obj.debug_string);
};

// InternalBuildingRepresentation.VectorCoordinates ========================================

InternalBuildingRepresentation.VectorCoordinates = {};

InternalBuildingRepresentation.VectorCoordinates.read = function (pbf, end) {
    return pbf.readFields(InternalBuildingRepresentation.VectorCoordinates._readField, {coordinate_index: []}, end);
};
InternalBuildingRepresentation.VectorCoordinates._readField = function (tag, obj, pbf) {
    if (tag === 1) pbf.readPackedVarint(obj.coordinate_index, true);
};
InternalBuildingRepresentation.VectorCoordinates.write = function (obj, pbf) {
    if (obj.coordinate_index) pbf.writePackedVarint(1, obj.coordinate_index);
};
